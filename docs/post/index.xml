<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Superbil.nil</title>
    <link>https://blog.superbil.org/post/</link>
    <description>Recent content in Posts on Superbil.nil</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-tw</language>
    <copyright>![Creative Commons License](http://i.creativecommons.org/l/by-nc-sa/2.5/tw/88x31.png)</copyright>
    <lastBuildDate>Mon, 29 May 2017 06:37:54 +0800</lastBuildDate>
    
	<atom:link href="https://blog.superbil.org/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>設定 hugo 和 org-mode</title>
      <link>https://blog.superbil.org/post/setup-hugo-with-orgmode/</link>
      <pubDate>Mon, 29 May 2017 06:37:54 +0800</pubDate>
      
      <guid>https://blog.superbil.org/post/setup-hugo-with-orgmode/</guid>
      <description>設定 hugo 而且用 org-mode 當作來源
如何做  安裝 hugo  brew install hugo
 開新專案  hugo new site blog
 安裝佈景  我用 git submodule 來解決這個記錄
git submodule add https://github.com/halogenica/beautifulhugo.git themes/beautifulhugo
 建立新文章  hugo new post/new-post.org
 產生網站  hugo
目前使用 hugo v0.21 版, 可以直接吃 org 檔，範例如下：
#+TITLE: 設定 hugo 和 org-mode #+DATE: 2017-05-29T09:4:78+08:00 #+SLUG: setup-hugo-with-orgmode #+TAGS: hugo org-mode 文章內容… balabala  本來用 +, - 之類包起來的檔頭已經不用再加上，hugo 會用 org-mode 本身的特別前綴詞去當作關鍵字來使用，這是新版才有的功能。 像是 title 就是在 #+ 之後的字，這個就會拿去當作區域變數來使用；若同時存在會以前面包起來的檔頭為主</description>
    </item>
    
    <item>
      <title>使用 rsync 和 launchd 自動備份</title>
      <link>https://blog.superbil.org/post/launchd-backup-with-rsync/</link>
      <pubDate>Thu, 15 May 2014 18:34:00 +0800</pubDate>
      
      <guid>https://blog.superbil.org/post/launchd-backup-with-rsync/</guid>
      <description>備份在現在是一件非常重要的事情，所以要把重要的東西備份，以免之後會哭哭
基於 rsync 可以細微的調整，而且擴充性好很多，所以就用 rsync 來當作主要備份工具
經過自己的需求和測試，目前自己使用的 rsync 大概會長這樣
rsync -auzthv --exclude-from=rsync_exclude --delete-after project/ /volumes/backup/project/  在 Mac 上要能跑的東西目前有 cron 或是 launchd 這兩個方式，前面的是一般 unix 常用的方式，基於要試新的玩意，就小玩了一下 launchd。(launchctl 是用來操作 launchd 用的命令列工具)
依照官方說明，我就做了一個這樣的 plist 出來
&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt; &amp;lt;!DOCTYPE plist PUBLIC &amp;quot;-//Apple//DTD PLIST 1.0//EN&amp;quot; &amp;quot;http://www.apple.com/DTDs/PropertyList-1.0.dtd&amp;quot;&amp;gt; &amp;lt;plist version=&amp;quot;1.0&amp;quot;&amp;gt; &amp;lt;dict&amp;gt; &amp;lt;key&amp;gt;Debug&amp;lt;/key&amp;gt; &amp;lt;true/&amp;gt; &amp;lt;key&amp;gt;Label&amp;lt;/key&amp;gt; &amp;lt;string&amp;gt;org.superbil.rsync&amp;lt;/string&amp;gt; &amp;lt;key&amp;gt;ProgramArguments&amp;lt;/key&amp;gt; &amp;lt;array&amp;gt; &amp;lt;string&amp;gt;/usr/bin/rsync&amp;lt;/string&amp;gt; &amp;lt;string&amp;gt;-auzthv&amp;lt;/string&amp;gt; &amp;lt;string&amp;gt;--delete-after&amp;lt;/string&amp;gt; &amp;lt;string&amp;gt;--exclude-from=rsync_exclude&amp;lt;/string&amp;gt; &amp;lt;string&amp;gt;project/&amp;lt;/string&amp;gt; &amp;lt;string&amp;gt;/volumes/backup/project/&amp;lt;/string&amp;gt; &amp;lt;/array&amp;gt; &amp;lt;key&amp;gt;StandardErrorPath&amp;lt;/key&amp;gt; &amp;lt;string&amp;gt;~/Library/Logs/rsync/project.log&amp;lt;/string&amp;gt; &amp;lt;key&amp;gt;StandardOutPath&amp;lt;/key&amp;gt; &amp;lt;string&amp;gt;~/Library/Logs/rsync/project_err.log&amp;lt;/string&amp;gt; &amp;lt;key&amp;gt;StartCalendarInterval&amp;lt;/key&amp;gt; &amp;lt;dict&amp;gt; &amp;lt;key&amp;gt;Hour&amp;lt;/key&amp;gt; &amp;lt;integer&amp;gt;6&amp;lt;/integer&amp;gt; &amp;lt;key&amp;gt;Minute&amp;lt;/key&amp;gt; &amp;lt;integer&amp;gt;0&amp;lt;/integer&amp;gt; &amp;lt;/dict&amp;gt; &amp;lt;/dict&amp;gt; &amp;lt;/plist&amp;gt;  這個 plist，ProgramArguments 這項單行和多行都可以，launchd 會幫你組成一行。StartCalendarInterval 就是重復執行的時間間隔，這個跟 unix 習慣一樣，沒有輸入的值他會當通用批配值。</description>
    </item>
    
  </channel>
</rss>